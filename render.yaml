# Render deployment configuration (FULL VERSION with Voice Features)
services:
  - type: web
    name: english-learning-app
    env: python
    plan: free
    buildCommand: |
      # Update package lists with error checking
      apt-get update || echo "apt-get update failed"
      # Install Chromium with verbose output
      apt-get install -y chromium-browser chromium-chromedriver || echo "chromium install failed"
      # Check what was actually installed
      dpkg -l | grep chromium || echo "no chromium packages found"
      # Manual verification
      ls -la /usr/bin/chromium* || echo "no chromium binaries in /usr/bin"
      ls -la /usr/bin/google-chrome* || echo "no chrome binaries in /usr/bin"
      # Try installing without chromium-chromedriver if main package fails
      apt-get install -y chromium-browser || echo "basic chromium install failed"
      # Create Chrome compatibility symlinks if chromium exists
      if [ -f /usr/bin/chromium-browser ]; then
        ln -sf /usr/bin/chromium-browser /usr/bin/google-chrome-stable
        ln -sf /usr/bin/chromium-browser /usr/bin/google-chrome
        ln -sf /usr/bin/chromium-browser /usr/local/bin/google-chrome
        echo "Chromium symlinks created"
      else
        echo "Chromium not found, cannot create symlinks"
      fi
      # Final verification
      which chromium-browser || echo "chromium-browser not in PATH"
      which google-chrome || echo "google-chrome not in PATH"
      # Install Python dependencies
      pip install -r requirements.txt
    startCommand: python backend/app.py
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: TURSO_DATABASE_URL
        sync: false
      - key: TURSO_AUTH_TOKEN
        sync: false
      - key: FLASK_ENV
        value: production
      - key: PORT
        value: 10000
      - key: RENDER
        value: true
      - key: SELENIUM_HEADLESS
        value: true
      - key: GOOGLE_CHROME_BIN
        value: /usr/bin/chromium-browser
      - key: CHROMEDRIVER_PATH
        value: /usr/bin/chromedriver
